@page "/categoria"
@page "/categoria/{Id:int}"

@using System.Text.Json
@inject ICategoriaService categoriaService
@inject IToastService toastService
@inject SweetAlertService Swal


<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@Titulo</p>
</div>
<div class="row justify-content-center  mt-3">

    <div class="col-sm-12 col-md-8 col-xl-10">
        <EditForm Model="modelo" OnValidSubmit="GuardarCambios">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="input-group">
                <span class="input-group-text bg-light">Nombre</span>
                <input type="text" class="form-control" @bind-value="modelo.Nombre">
            </div>
            <ValidationMessage For="@(()=>modelo.Nombre)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@boton</button>
                <a href="/categorias" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>
    </div>

</div>


@code{
    [Parameter]
    public int Id { get; set; }
    private string Titulo = "Nueva categoria";
    private string boton = "Crear";
    private CategoriaDTO modelo = new CategoriaDTO();

    protected override async Task OnParametersSetAsync()
    {
        if(Id != 0){
            Titulo = "Editar categoria";
            boton = "Actualizar";

            var response = await categoriaService.Obtener(Id);
            if(response.EsCorrecto!) {
                modelo =(CategoriaDTO)response.Resultado!;
                modelo.ConfirmarClave = modelo.Clave;
        
            } else {
                toastService.ShowWarning(response.Mensaje);
            }
        }
    }

    private async Task GuardarCambios()
    {
       
        bool respuesta = true;
        string mensaje = string.Empty;

        if(Id != 0){
            var response = await categoriaService.Editar(modelo);

            if(response.EsCorrecto){
                mensaje = "Categoria fue modificada";
            } else {
                respuesta = false;
                mensaje = "No se puede editar";
            }

        } else {
            modelo.Rol = "Administrador";
            var response = await categoriaService.Crear(modelo);

            if(response.EsCorrecto){
                mensaje = "Categoria fue creado";
            } else {
                respuesta = false;
                mensaje = "No se pudo crear";
            }

        }

        if(respuesta){
            toastService.ShowSuccess(mensaje);
            _navService.NavigateTo("/categorias");
        } else {
            toastService.ShowWarning(mensaje);
        }
    }

}